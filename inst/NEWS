0.3.1.92  2012-05-10

    o   Upgraded to Armadillo release 3.0.2 "v3.2 beta 2"

    	  * added unique(), for finding unique elements of a matrix
    	  * faster eigen decomposition via optional use of "divide and
    	    conquer" by eig_sym() 
    	  * faster transpose of vectors and compound expressions

0.3.0.3   2012-05-03

    o   Upgraded to Armadillo release 3.0.3

    	  * fixes for inplace transpose of complex number matrices
	  * fixes for complex number version of svd_econ()
	  * fixes for potential aliasing issues with submatrix views

    o   New example script fastLm 

0.3.0.2   2012-04-19

    o   Upgraded to Armadillo release 3.0.2

    	  * fixes for handling diagonal matrices

    o   Undefine NDEBUG if it has been set (as R does) as this prevents a
        number of useful debugging checks. Users can still define it or
        define ARMA_NO_DEBUG if they want a 'non-development' build

0.3.0.1   2012-04-12

    o   Upgraded to Armadillo release 3.0.1

    	  * fixes for compilation errors
    	  * fixes for potential aliasing issues

0.3.0   2012-04-10

    o   Upgraded to Armadillo release 3.0.0 "Antarctic Chilli Ranch"

    	  * added non-contiguous submatrix views
    	  * added shorthand for inverse: .i()
    	  * added hist() and histc()
    	  * faster repmat()
    	  * faster handling of submatrix views with one row or column 
    	  * faster generation of random numbers
    	  * faster element access in fixed size matrices
    	  * better detection of vector expressions by sum(), cumsum(),
    	    prod(), min(), max(), mean(), median(), stddev(), var() 
    	  * expressions X=A.i()*B and X=inv(A)*B are automatically converted
    	    to X=solve(A,B) 

0.2.40  2012-04-04

    o   Upgraded to Armadillo release 2.99.4 "Antarctic Chilli Ranch (Beta 4)"

    	  * fixes for handling expressions with fixed size matrices

0.2.39  2012-04-02

    o   Upgraded to Armadillo release 2.99.3 "Antarctic Chilli Ranch (Beta 3)"

    	  * faster repmat()
	  * workarounds for braindead compilers (eg. Visual Studio)

0.2.38  2012-03-28

    o   Upgraded to Armadillo release 2.99.2 "Antarctic Chilli Ranch (Beta 2)"

    	  * added .i()
    	  * much faster handling of .col() and .row()
    	  * expressions X=A.i()*B and X=inv(A)*B are automatically converted
    	    to X=solve(A,B) 

0.2.37  2012-03-19

    o   Upgraded to Armadillo release 2.99.1 "Antarctic Chilli Ranch (Beta 1)"

    	  * added non-contiguous submatrix views
	  * added hist() and histc()
	  * faster handling of submatrix views
	  * faster generation of random numbers
	  * faster element access in fixed size matrices
	  * better detection of vector expressions by sum(), cumsum(),
	    prod(), min(), max(), mean(), median(), stddev(), var() 

0.2.36  2012-03-05

    o   Upgraded to Armadillo release 2.4.4

          * fixes for qr() and syl()
          * more portable wall_clock class
          * faster relational operators on submatrices

0.2.35  2012-02-17

    o   Upgraded to Armadillo release 2.4.3

          * Support for ARMA_DEFAULT_OSTREAM using Rcpp::Rcout added

    o   Minor bug fix release improving corner cases affecting builds:

          * Missing semicolon added in Mat_meat (when in C++0x mode), with
	    thanks to Teo Guo Ci 
          * Armadillo version vars now instantiated in RcppArmadillo.cpp
	    which helps older g++ versions, with thanks to Gershon Bialer
          * Thanks also to Martin Renner for testing these changes

          * Unit tests output fallback directory changed per Brian Ripley's
            request to not ever use /tmp

	  * Minor update to version numbers in RcppArmadillo-package.Rd

0.2.34	2011-12-12

    o   Upgraded to Armadillo release 2.4.2

          * clarified documentation for .reshape()
          * fix for handling of empty matrices by .resize()

0.2.33	2011-12-07

    o   Upgraded to Armadillo release 2.4.1

          * added .resize()
          * fix for vector initialisation

0.2.32  2011-12-04

    o   Upgraded to Armadillo test release 2.4.0 "Loco Lounge Lizard"

    o   Minimal changes relative to 0.2.31 based on 2.3.92, next section is
        relative to the previous stable release series 2.2.* of Armadillo

          * added shorter forms of transposes: .t() and .st()
          * added optional use of 64 bit indices, allowing matrices to have
            more than 4 billion elements 
          * added experimental support for C++11 initialiser lists
          * faster pinv()
          * faster inplace transpose
          * faster handling of expressions with diagonal views
          * fixes for handling expressions with aliasing and submatrices
          * fixes for linking on Ubuntu and Debian systems
          * fixes for inconsistencies in interactions between matrices and
            cubes 
          * refactored code to eliminate warnings when using the Clang C++
            compiler 
          * .print_trans() and .raw_print_trans() are deprecated

0.2.31  2011-11-28

    o   Upgraded to Armadillo test release 2.3.92 "Loco Lounge Lizard (Beta 2)"

          * fixes for linking on Ubuntu and Debian systems
          * fixes for inconsistencies in interactions between matrices and
            cubes

0.2.30  2011-11-19

    o   Upgraded to Armadillo test release 2.3.91 "Loco Lounge Lizard (Beta 1)"

          * added shorter forms of transposes: .t() and .st()
          * added optional use of 64 bit indices, allowing matrices to have
            more than 4 billion elements
          * added experimental support for C++11 initialiser lists
          * faster pinv()
          * faster inplace transpose
          * bugfixes for handling expressions with aliasing and submatrices
          * refactored code to eliminate warnings when using the Clang C++
            compiler
          * .print_trans() and .raw_print_trans() are deprecated 

0.2.29  2011-09-01

    o   Upgraded to Armadillo release 2.2.3

          * Release fixes a speed issue in the as_scalar() function.

0.2.28  2011-08-02

    o   Upgraded to Armadillo release 2.2.1 "Blue Skies Debauchery"

          * faster multiplication of small matrices
          * faster trans()
          * faster handling of submatrices by norm()
          * added economical singular value decomposition: svd_thin()
          * added circ_toeplitz()
          * added .is_colvec() & .is_rowvec()
          * fixes for handling of complex numbers by cov(), cor(),
            running_stat_vec

0.2.27  2011-07-22

    o   Upgraded to Armadillo release 2.1.91 "v2.2 beta 1"

          * faster multiplication of small matrices
          * faster trans()
          * faster handling of submatrices by norm()
          * added economical singular value decomposition: svd_thin()
          * added circ_toeplitz()
          * added .is_colvec() & .is_rowvec()

0.2.26  2011-07-17

    o   Upgraded to Armadillo release 2.0.2 

          * fix for handling of conjugate transpose by as_scalar()
          * fix for handling of aliasing by diagmat()
          * fix for handling of empty matrices by symmatu()/symmatl()

0.2.25  2011-06-30

    o   Upgraded to Armadillo 2.0.1 which fixes two minor compilation issues

0.2.24  2011-06-29

    o   Upgraded to Armadillo release 2.0.0 "Carnivorous Sugar Glider"

          * faster multiplication of tiny matrices (≤ 4x4)
	  * faster compound expressions containing submatrices
	  * faster inverse of symmetric positive definite matrices
	  * faster element access for fixed size matrices
	  * added handling of arbitrarily sized empty matrices (eg. 5x0)
	  * added loading & saving of matrices as CSV text files
	  * added .count() member function to running_stat and
	    running_stat_vec 
	  * added syl(), strans(), symmatu()/symmatl()
	  * added submatrices of submatrices
	  * det(), inv() and solve() can be forced to use more precise
	  * algorithms for tiny matrices (≤ 4x4)
	  * htrans() has been deprecated; use trans() instead
	  * API change: trans() now takes the complex conjugate when
	    transposing a complex matrix 
	  * API change: .is_vec() now outputs true for empty vectors
	    (eg. 0x1) 
	  * API change: forms of chol(), eig_sym(), eig_gen(), inv(), 
            lu(), pinv(), princomp(), qr(), solve(), svd(), syl() that do not
	    return a bool indicating success now throw std::runtime_error
	    exceptions when failures are detected 
	  * API change: princomp_cov() has been removed; princomp() in 
            conjunction with cov() can be used instead
	  * API change: set_log_stream() & get_log_stream() have been 
            replaced by set_stream_err1() & get_stream_err1()

0.2.23  2011-06-23

    o   Upgraded to Armadillo release 1.99.5 "v2.0 beta 5"

          * Forms of chol(), eig_sym(), eig_gen(), inv(), lu(), pinv(),
	    princomp(), qr(), solve(), svd(), syl() that do not return a bool
	    indicating success now throw std::runtime_error exceptions when
	    failures are detected 
          * princomp_cov() has been removed; princomp() in conjunction with
	    cov() can be used instead
          * set_log_stream() & get_log_stream() have been replaced by
	    set_stream_err1() & get_stream_err1()
          * det(), inv() and solve() can be forced to use more precise
	    algorithms for tiny matrices (≤ 4x4)
          * Added loading & saving of matrices as CSV text files 

    o   fastLmPure() now uses same argument order as R's lm.fit()

    o   Export and document S3 methods in NAMESPACE and manual page as such

0.2.22  2011-06-06

    o   Upgraded to Armadillo release 1.99.4 "v2.0 beta 4" 

          * fixes for handling of tiny matrices

0.2.21  2011-05-27

    o   Upgraded to Armadillo release 1.99.3 "v2.0 beta 3" 

          * stricter size checking for row and column vectors
          * added .count() member function to running_stat and running_stat_vec

0.2.20  2011-05-25

    o   Upgraded to Armadillo release 1.99.2 "v2.0 beta 2" (and 1.99.1 before)

          * faster inverse of symmetric matrices
	  * faster element access for fixed size matrices
	  * faster multiplication of tiny matrices (eg. 4x4)
	  * faster compund expressions containing submatrices
	  * added handling of arbitrarily sized empty matrices (eg. 5x0)
	  * added syl()
	  * added strans()
	  * added symmatu()/symmatl()
	  * added submatrices of submatrices
	  * htrans() has been deprecated; use trans() instead
	  * trans() now takes the complex conjugate when transposing a
            complex matrix
	  * .is_vec() now outputs true for empty matrices
	  * most functions with matrix inputs no longer throw exceptions when
            given empty matrices (eg. 5x0)

    o   Added a new subdirectory examples/ seeded with a nice Vector
        Autoregression simulation simulation example by Lance Bachmeier

    o   Rewrote armadillo_version as to no longer require an instance 
        of arma::arma_version, with tanks to Conrad for the suggestion

0.2.19  2011-04-18

    o   Upgraded to Armadillo version 1.2.0 "Unscrupulous Carbon Emitter"

          * Added ability to use Blas & Lapack libraries with capitalised
	    function names 
          * Reduction of pedantic compiler warnings

0.2.18  2011-04-03

    o   Upgraded to Armadillo version 1.1.92  "Jurassic Barbecue"

          * Bugfix in cor()
	  * Automatic installation now requires CMake >= 2.6

0.2.17  2011-03-22

    o   Upgraded to Armadillo version 1.1.90  "Inside Job"

         * Added .min() & .max(), which can provide the extremum's location
	 * More robust mean(), var(), stddev()

0.2.16  2011-03-10

    o   Upgraded to Armadillo version 1.1.8   "Kangaroo Steak"

         * Added floor() and ceil()
         * Added “not a number”: math::nan()
         * Added infinity: math::inf()
         * Added standalone is_finite()
         * Faster min(), max(), mean()
         * Bugfix for a corner case with NaNs in min() and max()

0.2.15  2011-03-04

    o   Upgraded to Armadillo version 1.1.6   “Baby Carpet Shark”

         * fixed size matrices and vectors can use auxiliary (external) memory
         * .in_range() can use span() arguments
	 * subfields can use span() arguments

0.2.14  2011-03-02

    o   Support Run-Time Type Information (RTTI) on matrices by setting the
        state variable vec_state in Row and Col instantiation, with thanks to
        Conrad Sanderson for the hint

    o   fastLm code simplified further by instantiating the Armadillo matrix
        and vector directly from the SEXP coming from R

    o   inst/doc/Makefile now respects $R_HOME environment variable

0.2.13  2011-02-18

    o   Upgraded to Armadillo version 1.1.4   “Manta Lodge”

         * Faster sort()
         * Updated installation to detect recent versions of Intel's MKL
         * Added interpretation of arbitrary "flat" subcubes as matrices

0.2.12  2011-02-15

    o   Upgraded to Armadillo version 1.1.2   “Flood Kayak”

         * Faster prod()
	 * Faster solve() for compound expressions
	 * Fix for compilation using GCC's C++0x mode
	 * Fix for matrix handling by subcubes

0.2.11  2011-01-06

    o   Upgraded to Armadillo version 1.1.0   “Climate Vandal”

         * Extended submatrix views, including access to elements whose
           indices are specified in a separate vector
         * Added handling of raw binary files by save/load functions
	 * Added cumsum()
	 * Added interpretation of matrices as triangular via
           trimatu()/trimatl() 
	 * Faster solve(), inv() via explicit handling of triangular matrices 
	 * The stream for logging of errors and warnings can now be changed 

    o   New unexported R function SHLIB, a small wrapper around R CMD SHLIB,
        which can be used as   Rscript -e "RcppArmadillo:::SHLIB('foo.cpp')"

0.2.10  2010-11-25

    o   Upgraded to Armadillo 1.0.0 "Antipodean Antileech"

         * After 2 1/2 years of collaborative development, we are proud to
	   release the 1.0 milestone version. 
         * Many thanks are extended to all contributors and bug reporters.

    o   R/RcppArmadillo.package.skeleton.R: Updated to no longer rely on GNU
        make for builds of packages using RcppArmadillo
 
    o   summary() for fastLm() objects now returns r.squared and adj.r.squared

0.2.9   2010-11-11

    o   Upgraded to Armadillo 0.9.92 "Wall Street Gangster":

         * Fixes for compilation issues under the Intel C++ compiler
         * Added matrix norms

0.2.8   2010-10-16

    o   Upgraded to Armadillo 0.9.90 "Water Dragon":

         * Added unsafe_col()
         * Speedups and bugfixes in lu()
         * Minimisation of pedantic compiler warnings

    o   Switched NEWS and ChangeLog between inst/ and the top-level directory
        so that NEWS (this file) gets installed with the package

0.2.7   2010-09-25

    o   Upgraded to Armadillo 0.9.80 "Chihuahua Muncher":

         * Added join_slices(), insert_slices(), shed_slices()
         * Added in-place operations on diagonals
         * Various speedups due to internal architecture improvements

0.2.6   2010-09-12

    o   Upgraded to Armadillo 0.9.70 "Subtropical Winter Safari"
    
    o	arma::Mat, arma::Row and arma::Col get constructor that take vector
    	or matrix sugar expressions. See the unit test "test.armadillo.sugar.ctor" 
    	and "test.armadillo.sugar.matrix.ctor" for examples.

0.2.5   2010-08-05

    o   Upgraded to Armadillo 0.9.60 "Killer Bush Turkey"

0.2.4   2010-07-27

    o   Upgraded to Armadillo 0.9.52 'Monkey Wrench'

    o   src/fastLm.cpp: Switch from inv() to pinv() as inv() now tests for
        singular matrices and warns and returns an empty matrix which stops
        the example fastLm() implementation on the manual page -- and while
        this is generally reasonably it makes sense here to continue which
        the Moore-Penrose pseudo-inverse allows us to do this

0.2.3   2010-06-14

    o   Better configuration to detect suncc (which does not have std::isfinite)

0.2.2	2010-06-09

    o   Added RcppArmadillo:::CxxFlags for cases where RcppArmadillo is 
        not used via a package

    o   Upgraded to Armadillo 0.9.10 'Chilli Espresso'

    o   Wrap support for mtOp, i.e. operations involving mixed types such 
        as a complex and an arma::mat, which have been introduced in
        armadillo 0.9.10
        
    o   Wrap support for mtGlue, i.e. operations involving matrices of mixed 
        types such as an arma::mat and an arma::imat, which have been introduced
        in armadillo 0.9.10
        
    o   Included an inline plugin to support the plugin system introduced
        in inline 0.3.5. The unit tests have moved from the src directory 
        to the unit test directory (similar to Rcpp) using cxxfunction with the
        RcppArmadillo plugin. 
        
0.2.1   2010-05-19

    o   Bug-fix release permitting compilation on Windows

0.2.0   2010-05-18

    o   fastLm() is now generic and has a formula interface as well as
        methods for print, summary, predict to behave like a standard
        model fitting function

    o   Armadillo sources (using release 0.9.8) are now included in the
        package using a standardized build suitable for our purposes
        (not assuming Boost or Atlas) -- see ?RcppArmadillo for
        details
        
   o    New R function RcppArmadillo.package.skeleton, similar to
        Rcpp::Rcpp.package.skeleton, but targetting use of
        RcppArmadillo

0.1.0   2010-03-11

    o   the fastLm() implementation of a bare-bones lm() fit (using
        Armadillo's solve() function) provides an example of how
        efficient code can be written compactly using the combination
        of Rcpp, RcppAramadillo and Armadillo

    o   support for Rcpp implicit wrap of these types :
        Mat<T>, Col<T>, Row<T>, Cube<T> where T is one of : 
        int, unsigned int, double, float
        
    o   support for Rcpp implicit as of these types :
        Mat<T>, Col<T>, Row<T> where R is one of :
        int, unsigned int, double, float



