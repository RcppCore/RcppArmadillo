0.2.16  2011-03-10

    o   Upgraded to Armadillo Version 1.1.8   "Kangaroo Steak"

         * Added floor() and ceil()
         * Added “not a number”: math::nan()
         * Added infinity: math::inf()
         * Added standalone is_finite()
         * Faster min(), max(), mean()
         * Bugfix for a corner case with NaNs in min() and max()

0.2.15  2011-03-04

    o   Upgraded to Armadillo Version 1.1.6   “Baby Carpet Shark”

         * fixed size matrices and vectors can use auxiliary (external) memory
         * .in_range() can use span() arguments
	 * subfields can use span() arguments

0.2.14  2011-03-02

    o   Support Run-Time Type Information (RTTI) on matrices by setting the
        state variable vec_state in Row and Col instantiation, with thanks to
        Conrad Sanderson for the hint

    o   fastLm code simplified further by instantiating the Armadillo matrix
        and vector directly from the SEXP coming from R

    o   inst/doc/Makefile now respects $R_HOME environment variable

0.2.13  2011-02-18

    o   Upgraded to Armadillo Version 1.1.4   “Manta Lodge”

         * Faster sort()
         * Updated installation to detect recent versions of Intel's MKL
         * Added interpretation of arbitrary "flat" subcubes as matrices

0.2.12  2011-02-15

    o   Upgraded to Armadillo Version 1.1.2   “Flood Kayak”

         * Faster prod()
	 * Faster solve() for compound expressions
	 * Fix for compilation using GCC's C++0x mode
	 * Fix for matrix handling by subcubes

0.2.11  2011-01-06

    o   Upgraded to Armadillo Version 1.1.0   “Climate Vandal”

         * Extended submatrix views, including access to elements whose
           indices are specified in a separate vector
         * Added handling of raw binary files by save/load functions
	 * Added cumsum()
	 * Added interpretation of matrices as triangular via
           trimatu()/trimatl() 
	 * Faster solve(), inv() via explicit handling of triangular matrices 
	 * The stream for logging of errors and warnings can now be changed 

    o   New unexported R function SHLIB, a small wrapper around R CMD SHLIB,
        which can be used as   Rscript -e "RcppArmadillo:::SHLIB('foo.cpp')"

0.2.10  2010-11-25

    o   Upgraded to Armadillo 1.0.0 "Antipodean Antileech"

         * After 2 1/2 years of collaborative development, we are proud to
	   release the 1.0 milestone version. 
         * Many thanks are extended to all contributors and bug reporters.

    o   R/RcppArmadillo.package.skeleton.R: Updated to no longer rely on GNU
        make for builds of packages using RcppArmadillo
 
    o   summary() for fastLm() objects now returns r.squared and adj.r.squared

0.2.9   2010-11-11

    o   Upgraded to Armadillo 0.9.92 "Wall Street Gangster":

         * Fixes for compilation issues under the Intel C++ compiler
         * Added matrix norms

0.2.8   2010-10-16

    o   Upgraded to Armadillo 0.9.90 "Water Dragon":

         * Added unsafe_col()
         * Speedups and bugfixes in lu()
         * Minimisation of pedantic compiler warnings

    o   Switched NEWS and ChangeLog between inst/ and the top-level directory
        so that NEWS (this file) gets installed with the package

0.2.7   2010-09-25

    o   Upgraded to Armadillo 0.9.80 "Chihuahua Muncher":

         * Added join_slices(), insert_slices(), shed_slices()
         * Added in-place operations on diagonals
         * Various speedups due to internal architecture improvements

0.2.6   2010-09-12

    o   Upgraded to Armadillo 0.9.70 "Subtropical Winter Safari"
    
    o	arma::Mat, arma::Row and arma::Col get constructor that take vector
    	or matrix sugar expressions. See the unit test "test.armadillo.sugar.ctor" 
    	and "test.armadillo.sugar.matrix.ctor" for examples.

0.2.5   2010-08-05

    o   Upgraded to Armadillo 0.9.60 "Killer Bush Turkey"

0.2.4   2010-07-27

    o   Upgraded to Armadillo 0.9.52 'Monkey Wrench'

    o   src/fastLm.cpp: Switch from inv() to pinv() as inv() now tests for
        singular matrices and warns and returns an empty matrix which stops
        the example fastLm() implementation on the manual page -- and while
        this is generally reasonably it makes sense here to continue which
        the Moore-Penrose pseudo-inverse allows us to do this

0.2.3   2010-06-14

    o   Better configuration to detect suncc (which does not have std::isfinite)

0.2.2	2010-06-09

    o   Added RcppArmadillo:::CxxFlags for cases where RcppArmadillo is 
        not used via a package

    o   Upgraded to Armadillo 0.9.10 'Chilli Espresso'

    o   Wrap support for mtOp, i.e. operations involving mixed types such 
        as a complex and an arma::mat, which have been introduced in
        armadillo 0.9.10
        
    o   Wrap support for mtGlue, i.e. operations involving matrices of mixed 
        types such as an arma::mat and an arma::imat, which have been introduced
        in armadillo 0.9.10
        
    o   Included an inline plugin to support the plugin system introduced
        in inline 0.3.5. The unit tests have moved from the src directory 
        to the unit test directory (similar to Rcpp) using cxxfunction with the
        RcppArmadillo plugin. 
        
0.2.1   2010-05-19

    o   Bug-fix release permitting compilation on Windows

0.2.0   2010-05-18

    o   fastLm() is now generic and has a formula interface as well as
        methods for print, summary, predict to behave like a standard
        model fitting function

    o   Armadillo sources (using release 0.9.8) are now included in the
        package using a standardized build suitable for our purposes
        (not assuming Boost or Atlas) -- see ?RcppArmadillo for
        details
        
   o    New R function RcppArmadillo.package.skeleton, similar to
        Rcpp::Rcpp.package.skeleton, but targetting use of
        RcppArmadillo

0.1.0   2010-03-11

    o   the fastLm() implementation of a bare-bones lm() fit (using
        Armadillo's solve() function) provides an example of how
        efficient code can be written compactly using the combination
        of Rcpp, RcppAramadillo and Armadillo

    o   support for Rcpp implicit wrap of these types :
        Mat<T>, Col<T>, Row<T>, Cube<T> where T is one of : 
        int, unsigned int, double, float
        
    o   support for Rcpp implicit as of these types :
        Mat<T>, Col<T>, Row<T> where R is one of :
        int, unsigned int, double, float



