# -*- mode: autoconf; autoconf-indentation: 4; -*-
#
# RcppArmadillo configure.in 
#
# $Id$

# require at least autoconf 2.65
AC_PREREQ(2.63)

# Process this file with autoconf to produce a configure script.
AC_INIT([RcppArmadillo],[0.1.0])

# We are using C++
AC_LANG(C++)
AC_REQUIRE_CPP
AC_PROG_CC
AC_PROG_CXX



## look for Armadillo header

## check for header and ability to link
## first for headers Debian has in libarmadillo-dev
AC_CHECK_HEADER(armadillo,,
                [AC_MSG_ERROR([ERROR: Armadillo headers required; use '-Iincludedir' in CXXFLAGS for unusual locations.])])
## second check the lib itself
arma_savedlibs="$LIBS"
LIBS="$LIBS -larmadillo"
AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <armadillo>]], 
				[[arma::mat A = arma::eye<arma::mat>(5,5);]])],
				[],
				[AC_MSG_ERROR([ERROR: Armadillo test program did not link, maybe add '-Llibdir' to LDFLAGS.])])
LIBS="$arma_savedlibs"


## also check for minimum version: 0.7.0 support Cube type
AC_MSG_CHECKING([if Armadillo version >= 0.7.0])
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <armadillo>
int main() {
  struct arma::arma_version av;
  int arma = 10000*av.major + 100*av.minor + av.patch;
  if (arma >= 700) { /* 700 corresponds to 0.7.0 */
    exit(0);
  } else {
    exit(1);
  }
}
]])],
[arma_version070=1],
[arma_version070=0],
[arma_version070=1])
if test x"${arma_version070}" == x"0"; then
  AC_MSG_RESULT([no])
else
  AC_MSG_RESULT([yes])
fi

AC_DEFUN([AC_PROG_R], [AC_CHECK_PROG(R,R,yes)])
AC_PROG_R


## With thanks to Kurt
: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
    AC_MSG_ERROR([Could not determine R_HOME.])   
fi
CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXXFLAGS`

## look for Rscript, but use the one found via R_HOME to allow for multiple installations
AC_DEFUN([AC_PROG_RSCRIPT], [AC_CHECK_PROG(RSCRIPT,Rscript,yes)])
AC_PROG_RSCRIPT
if test x"${RSCRIPT}" == x"yes" ; then
    ## Rcpp compile flag providing header directory containing Rcpp.h
    rcpp_cxxflags=`${R_HOME}/bin/Rscript -e 'Rcpp:::CxxFlags()'`
    ## link flag providing libary as well as path to library, and optionally rpath
    rcpp_ldflags=`${R_HOME}/bin/Rscript -e 'Rcpp:::LdFlags()'`
else
    echo "
  Your installation does not appear to have Rscript installed.

  Please make sure that you have a working and complete R installation.
"
    exit 1
fi

## now use all these
AC_SUBST([PKG_CPPFLAGS],["${PKG_CPPFLAGS} $rcpp_cxxflags"])
AC_SUBST([PKG_LIBS],["${PKG_LIBS} $rcpp_ldflags"])
AC_SUBST([ARMA_HAS_CUBE],["$arma_version070"])
AC_CONFIG_FILES([src/Makevars inst/include/RcppArmadilloDefines.h])
AC_OUTPUT
echo "Completed configuration and ready to build."
